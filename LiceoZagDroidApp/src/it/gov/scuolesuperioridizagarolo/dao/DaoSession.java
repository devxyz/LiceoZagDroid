package it.gov.scuolesuperioridizagarolo.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import it.gov.scuolesuperioridizagarolo.dao.CacheFileDB;
import it.gov.scuolesuperioridizagarolo.dao.TimetableDB;
import it.gov.scuolesuperioridizagarolo.dao.CircolareDB;
import it.gov.scuolesuperioridizagarolo.dao.TermineDB;
import it.gov.scuolesuperioridizagarolo.dao.NewsDB;
import it.gov.scuolesuperioridizagarolo.dao.CircolareContieneTermineDB;
import it.gov.scuolesuperioridizagarolo.dao.NewsContieneTermineDB;

import it.gov.scuolesuperioridizagarolo.dao.CacheFileDBDao;
import it.gov.scuolesuperioridizagarolo.dao.TimetableDBDao;
import it.gov.scuolesuperioridizagarolo.dao.CircolareDBDao;
import it.gov.scuolesuperioridizagarolo.dao.TermineDBDao;
import it.gov.scuolesuperioridizagarolo.dao.NewsDBDao;
import it.gov.scuolesuperioridizagarolo.dao.CircolareContieneTermineDBDao;
import it.gov.scuolesuperioridizagarolo.dao.NewsContieneTermineDBDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig cacheFileDBDaoConfig;
    private final DaoConfig timetableDBDaoConfig;
    private final DaoConfig circolareDBDaoConfig;
    private final DaoConfig termineDBDaoConfig;
    private final DaoConfig newsDBDaoConfig;
    private final DaoConfig circolareContieneTermineDBDaoConfig;
    private final DaoConfig newsContieneTermineDBDaoConfig;

    private final CacheFileDBDao cacheFileDBDao;
    private final TimetableDBDao timetableDBDao;
    private final CircolareDBDao circolareDBDao;
    private final TermineDBDao termineDBDao;
    private final NewsDBDao newsDBDao;
    private final CircolareContieneTermineDBDao circolareContieneTermineDBDao;
    private final NewsContieneTermineDBDao newsContieneTermineDBDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        cacheFileDBDaoConfig = daoConfigMap.get(CacheFileDBDao.class).clone();
        cacheFileDBDaoConfig.initIdentityScope(type);

        timetableDBDaoConfig = daoConfigMap.get(TimetableDBDao.class).clone();
        timetableDBDaoConfig.initIdentityScope(type);

        circolareDBDaoConfig = daoConfigMap.get(CircolareDBDao.class).clone();
        circolareDBDaoConfig.initIdentityScope(type);

        termineDBDaoConfig = daoConfigMap.get(TermineDBDao.class).clone();
        termineDBDaoConfig.initIdentityScope(type);

        newsDBDaoConfig = daoConfigMap.get(NewsDBDao.class).clone();
        newsDBDaoConfig.initIdentityScope(type);

        circolareContieneTermineDBDaoConfig = daoConfigMap.get(CircolareContieneTermineDBDao.class).clone();
        circolareContieneTermineDBDaoConfig.initIdentityScope(type);

        newsContieneTermineDBDaoConfig = daoConfigMap.get(NewsContieneTermineDBDao.class).clone();
        newsContieneTermineDBDaoConfig.initIdentityScope(type);

        cacheFileDBDao = new CacheFileDBDao(cacheFileDBDaoConfig, this);
        timetableDBDao = new TimetableDBDao(timetableDBDaoConfig, this);
        circolareDBDao = new CircolareDBDao(circolareDBDaoConfig, this);
        termineDBDao = new TermineDBDao(termineDBDaoConfig, this);
        newsDBDao = new NewsDBDao(newsDBDaoConfig, this);
        circolareContieneTermineDBDao = new CircolareContieneTermineDBDao(circolareContieneTermineDBDaoConfig, this);
        newsContieneTermineDBDao = new NewsContieneTermineDBDao(newsContieneTermineDBDaoConfig, this);

        registerDao(CacheFileDB.class, cacheFileDBDao);
        registerDao(TimetableDB.class, timetableDBDao);
        registerDao(CircolareDB.class, circolareDBDao);
        registerDao(TermineDB.class, termineDBDao);
        registerDao(NewsDB.class, newsDBDao);
        registerDao(CircolareContieneTermineDB.class, circolareContieneTermineDBDao);
        registerDao(NewsContieneTermineDB.class, newsContieneTermineDBDao);
    }
    
    public void clear() {
        cacheFileDBDaoConfig.clearIdentityScope();
        timetableDBDaoConfig.clearIdentityScope();
        circolareDBDaoConfig.clearIdentityScope();
        termineDBDaoConfig.clearIdentityScope();
        newsDBDaoConfig.clearIdentityScope();
        circolareContieneTermineDBDaoConfig.clearIdentityScope();
        newsContieneTermineDBDaoConfig.clearIdentityScope();
    }

    public CacheFileDBDao getCacheFileDBDao() {
        return cacheFileDBDao;
    }

    public TimetableDBDao getTimetableDBDao() {
        return timetableDBDao;
    }

    public CircolareDBDao getCircolareDBDao() {
        return circolareDBDao;
    }

    public TermineDBDao getTermineDBDao() {
        return termineDBDao;
    }

    public NewsDBDao getNewsDBDao() {
        return newsDBDao;
    }

    public CircolareContieneTermineDBDao getCircolareContieneTermineDBDao() {
        return circolareContieneTermineDBDao;
    }

    public NewsContieneTermineDBDao getNewsContieneTermineDBDao() {
        return newsContieneTermineDBDao;
    }

}
